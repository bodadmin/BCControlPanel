/*Copyright (c) 2016-2017 Business on Demand Ltd. All Rights Reserved. This software is the confidential and proprietary information of Business on Demand Ltd. You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with Business on Demand Ltd.*/

package com.bccontrolpanel.userdatabase.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.bccontrolpanel.userdatabase.*;

/**
 * Service object for domain model class Menus.
 * @see com.bccontrolpanel.userdatabase.Menus
 */

public interface MenusService {
   /**
	 * Creates a new menus.
	 * 
	 * @param created
	 *            The information of the created menus.
	 * @return The created menus.
	 */
	public Menus create(Menus created);

	/**
	 * Deletes a menus.
	 * 
	 * @param menusId
	 *            The id of the deleted menus.
	 * @return The deleted menus.
	 * @throws EntityNotFoundException
	 *             if no menus is found with the given id.
	 */
	public Menus delete(Integer menusId) throws EntityNotFoundException;

	/**
	 * Finds all menuss.
	 * 
	 * @return A list of menuss.
	 */
	public Page<Menus> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Menus> findAll(Pageable pageable);
	
	/**
	 * Finds menus by id.
	 * 
	 * @param id
	 *            The id of the wanted menus.
	 * @return The found menus. If no menus is found, this method returns
	 *         null.
	 */
	public Menus findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a menus.
	 * 
	 * @param updated
	 *            The information of the updated menus.
	 * @return The updated menus.
	 * @throws EntityNotFoundException
	 *             if no menus is found with given id.
	 */
	public Menus update(Menus updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the menuss in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the menus.
	 */

	public long countAll();


    public Page<Menus> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

