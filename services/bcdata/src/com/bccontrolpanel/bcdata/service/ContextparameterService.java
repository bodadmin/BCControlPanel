/*Copyright (c) 2016-2017 Business on Demand Ltd. All Rights Reserved. This software is the confidential and proprietary information of Business on Demand Ltd. You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with Business on Demand Ltd.*/

package com.bccontrolpanel.bcdata.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.bccontrolpanel.bcdata.*;

/**
 * Service object for domain model class Contextparameter.
 * @see com.bccontrolpanel.bcdata.Contextparameter
 */

public interface ContextparameterService {
   /**
	 * Creates a new contextparameter.
	 * 
	 * @param created
	 *            The information of the created contextparameter.
	 * @return The created contextparameter.
	 */
	public Contextparameter create(Contextparameter created);

	/**
	 * Deletes a contextparameter.
	 * 
	 * @param contextparameterId
	 *            The id of the deleted contextparameter.
	 * @return The deleted contextparameter.
	 * @throws EntityNotFoundException
	 *             if no contextparameter is found with the given id.
	 */
	public Contextparameter delete(ContextparameterId contextparameterId) throws EntityNotFoundException;

	/**
	 * Finds all contextparameters.
	 * 
	 * @return A list of contextparameters.
	 */
	public Page<Contextparameter> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Contextparameter> findAll(Pageable pageable);
	
	/**
	 * Finds contextparameter by id.
	 * 
	 * @param id
	 *            The id of the wanted contextparameter.
	 * @return The found contextparameter. If no contextparameter is found, this method returns
	 *         null.
	 */
	public Contextparameter findById(ContextparameterId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a contextparameter.
	 * 
	 * @param updated
	 *            The information of the updated contextparameter.
	 * @return The updated contextparameter.
	 * @throws EntityNotFoundException
	 *             if no contextparameter is found with given id.
	 */
	public Contextparameter update(Contextparameter updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the contextparameters in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the contextparameter.
	 */

	public long countAll();


    public Page<Contextparameter> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

